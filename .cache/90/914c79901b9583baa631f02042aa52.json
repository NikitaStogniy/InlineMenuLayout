{"id":"MgTz","dependencies":[{"name":"/Users/milic/GitHub/InlineMenuLayout/package.json","includedInParent":true,"mtime":1605092238000},{"name":"imagesloaded","loc":{"line":2,"column":29},"parent":"/Users/milic/GitHub/InlineMenuLayout/src/js/utils.js","resolved":"/Users/milic/GitHub/InlineMenuLayout/node_modules/imagesloaded/imagesloaded.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.preloadFonts = exports.preloadImages = exports.getMousePos = exports.lerp = exports.clamp = exports.map = void 0;\n\n// Map number x from range [a, b] to [c, d]\nvar imagesLoaded = require('imagesloaded');\n\nvar map = function map(x, a, b, c, d) {\n  return (x - a) * (d - c) / (b - a) + c;\n};\n\nexports.map = map;\n\nvar clamp = function clamp(num, min, max) {\n  return num <= min ? min : num >= max ? max : num;\n}; // Linear interpolation\n\n\nexports.clamp = clamp;\n\nvar lerp = function lerp(a, b, n) {\n  return (1 - n) * a + n * b;\n}; // Gets the mouse position\n\n\nexports.lerp = lerp;\n\nvar getMousePos = function getMousePos(e) {\n  return {\n    x: e.clientX,\n    y: e.clientY\n  };\n}; // Preload images\n\n\nexports.getMousePos = getMousePos;\n\nvar preloadImages = function preloadImages() {\n  var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'img';\n  return new Promise(function (resolve) {\n    imagesLoaded(document.querySelectorAll(selector), {\n      background: true\n    }, resolve);\n  });\n}; // Preload images\n\n\nexports.preloadImages = preloadImages;\n\nvar preloadFonts = function preloadFonts(id) {\n  return new Promise(function (resolve) {\n    WebFont.load({\n      typekit: {\n        id: id\n      },\n      active: resolve\n    });\n  });\n};\n\nexports.preloadFonts = preloadFonts;"},"sourceMaps":null,"error":null,"hash":"52c4c69c68333ac6afe450b3e03103da","cacheData":{"env":{}}}